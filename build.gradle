buildscript {
    ext {
        kotlinVersion = '1.3.10'
        springBootVersion = '2.1.0.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.2.71'

    // https://plugins.gradle.org/plugin/io.forgo.keystoreplugin
    id "io.forgo.keystoreplugin" version "1.0"
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'io.forgo.spring.security'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

ext {
    // dependency versioning
    auth0JavaJWT = '3.4.1'

    // keystore file
    keystoreOutputDir = ".keystore"
    keystoreFile = "keystore.jks"
    keystorePassword = "password"
    keystoreAlias = "jetty"

    // keystore path
    // TODO: distinguish paths based on environment (test vs deploy)
    keystorePath = project.keystoreOutputDir
}

// keystore plugin readme:
// https://github.com/forgo/keystore-gradle-plugin/blob/master/README.md
keystore {
    outputDir = "${project.keystoreOutputDir}"

    keyFile = "debug.key"
    keyPassword = "${project.keystorePassword}"

    certFile = "debug.crt"

    pkcs12File = "keystore.pkcs12"
    pkcs12Password = "${project.keystorePassword}"

    jksFile = "${project.keystoreFile}"
    jksPassword = "${project.keystorePassword}"
    alias = "${project.keystoreAlias}"
}

// copies resources from source to target, potentially processing them
processResources {
    // pre-process variables inside application.yml using project properties (ext)
    outputs.upToDateWhen { false }
    filesMatching("**/application.yml") {
        expand( project.properties )
    }
}

repositories {
    mavenCentral()
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    implementation 'org.springframework.security:spring-security-core'
    implementation 'org.springframework.security:spring-security-config'
    implementation 'org.springframework.security:spring-security-oauth2-client'
    implementation 'org.springframework.security:spring-security-oauth2-jose'

    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'

    implementation "com.auth0:java-jwt:${project.auth0JavaJWT}"

    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'net.sourceforge.htmlunit:htmlunit'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}